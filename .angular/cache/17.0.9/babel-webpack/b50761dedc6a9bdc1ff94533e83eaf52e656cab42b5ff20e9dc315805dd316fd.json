{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ServiceService = /*#__PURE__*/(() => {\n  class ServiceService {\n    constructor(http) {\n      this.http = http;\n      //urlApi=\"http://localhost/inspection/api/\";\n      this.urlApi = \"https://www.inspectionsquad.com/api/\";\n      this.urlApiReport = \"https://www.inspectionsquad.com/report/index.php\";\n    }\n    getInspectionstAll() {\n      return this.http.get(this.urlApi + \"Inspections/getAll\");\n    }\n    getAsignmentAll() {\n      return this.http.get(this.urlApi + \"Assignment/getAll\");\n    }\n    getAssigmentById(id) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Assignment/getById\", id, httpOptions);\n    }\n    getLogin(datosLogin) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Usuarios/login\", datosLogin, httpOptions);\n    }\n    //**Observations ***/\n    getObservationSection(id) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Observation/getByIdFather\", id, httpOptions);\n    }\n    getObservation(id) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Observation/getObservation\", id, httpOptions);\n    }\n    getObservationChild(id) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Observation/getObservationChild\", id, httpOptions);\n    }\n    //**Save Assing */\n    saveAssing(datosAssing) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Assignment/save\", datosAssing, httpOptions);\n    }\n    delAssing(datosAssing) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Assignment/delete\", datosAssing, httpOptions);\n    }\n    //********************* */\n    //**Inspecciones */\n    saveInspection(datosInspection) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/save\", datosInspection, httpOptions);\n    }\n    saveInspectionDetails(datosInspectionDetails) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/saveDetails\", datosInspectionDetails, httpOptions);\n    }\n    getInspectionsByStatusAndId(status) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/getInspectionsByStatusAndId\", status, httpOptions);\n    }\n    getInspectionsByStatus(status) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/getInspectionsByStatus\", status, httpOptions);\n    }\n    //**Inspectors */\n    getInspectors() {\n      return this.http.get(this.urlApi + \"Inspectors/getAll\");\n    }\n    delInspector(id) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspectors/delete\", id, httpOptions);\n    }\n    saveInspector(datosInspector) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspectors/save\", datosInspector, httpOptions);\n    }\n    //**Details Inspections */\n    getInspectionById(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/getInspectionById\", datos, httpOptions);\n    }\n    getDetailsInspection(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/getDetailsInspection\", datos, httpOptions);\n    }\n    setUpdateStatus(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/setUpdateStatus\", datos, httpOptions);\n    }\n    saveImage(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/saveImage\", datos, httpOptions);\n    }\n    getPhotos(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/getPhotos\", datos, httpOptions);\n    }\n    delPhoto(datos) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post(this.urlApi + \"Inspections/delImage\", datos, httpOptions);\n    }\n    //**Generate Report */\n    generateReport(id) {\n      return this.http.get(this.urlApiReport + \"?id=\" + id);\n    }\n    static #_ = this.ɵfac = function ServiceService_Factory(t) {\n      return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServiceService,\n      factory: ServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ServiceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}