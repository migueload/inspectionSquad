{"ast":null,"code":"import _asyncToGenerator from \"/Users/migueload/inspectionSquad/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nfunction InspectorPage_ion_card_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"div\", 19)(2, \"ion-icon\", 20);\n    i0.ɵɵlistener(\"click\", function InspectorPage_ion_card_34_Template_ion_icon_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const dato_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showConfirmation(dato_r1.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"ion-card-header\")(4, \"ion-card-subtitle\")(5, \"b\");\n    i0.ɵɵtext(6, \"Address: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-card-subtitle\")(9, \"b\");\n    i0.ɵɵtext(10, \"Number phone: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-card-subtitle\")(13, \"b\");\n    i0.ɵɵtext(14, \"E-mail: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ion-card-title\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"ion-card-content\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dato_r1 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", dato_r1.address, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", dato_r1.phone, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(dato_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", dato_r1.name, \" \", dato_r1.last_name, \"\");\n  }\n}\nexport let InspectorPage = /*#__PURE__*/(() => {\n  class InspectorPage {\n    constructor(service, toast, alert, navCtrl) {\n      this.service = service;\n      this.toast = toast;\n      this.alert = alert;\n      this.navCtrl = navCtrl;\n      this.user = localStorage.getItem(\"username\");\n    }\n    ngOnInit() {\n      this.loadInspectors();\n    }\n    loadInspectors() {\n      this.service.getInspectors().subscribe(respuesta => {\n        this.datos = respuesta;\n      }, error => {\n        console.log(\"Error\" + error);\n      });\n    }\n    showConfirmation(id) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const alert = yield _this.alert.create({\n          header: 'Confirmation',\n          message: '¿Are you sure?',\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Acción cancelada');\n            }\n          }, {\n            text: 'Ok',\n            handler: () => {\n              _this.delInspectors(id);\n            }\n          }]\n        });\n        yield alert.present();\n      })();\n    }\n    save() {\n      const name = document.getElementById('name');\n      const last_name = document.getElementById('last_name');\n      const email = document.getElementById('email');\n      const address = document.getElementById('address');\n      const phone = document.getElementById('phone');\n      const nombre = name.value;\n      const apellido = last_name.value;\n      const correo = email.value;\n      const direccion = address.value;\n      const telefono = phone.value;\n      let campos = \"\";\n      if (nombre == \"\") {\n        campos = \"Name, \";\n      }\n      if (apellido == \"\") {\n        campos += \"Last Name, \";\n      }\n      if (telefono == \"\") {\n        campos += \"Number Phone, \";\n      }\n      if (correo == \"\") {\n        campos += \"E-mail, \";\n      }\n      this.campos = campos;\n      if (campos != \"\") {\n        this.validarVacio();\n      } else {\n        const datos = {\n          'name': nombre,\n          'last_name': apellido,\n          'email': correo,\n          'phone': telefono,\n          'address': direccion\n        };\n        console.log(datos);\n        this.service.saveInspector(datos).subscribe(respuesta => {\n          this.clearFields();\n          this.success();\n          this.loadInspectors();\n        }, error => {\n          console.log(\"Error\" + error);\n        });\n      }\n    }\n    delInspectors(id) {\n      const datosinspector = {\n        'id': id\n      };\n      this.service.delInspector(datosinspector).subscribe(respuesta => {\n        this.loadInspectors();\n      }, error => {\n        console.log(\"Error\" + error);\n      });\n    }\n    clearFields() {\n      const name = document.getElementById('name');\n      const last_name = document.getElementById('last_name');\n      const email = document.getElementById('email');\n      const address = document.getElementById('address');\n      const phone = document.getElementById('phone');\n      name.value;\n      last_name.value = \"\";\n      email.value = \"\";\n      phone.value = \"\";\n      address.value = \"\";\n    }\n    back() {\n      this.navCtrl.navigateForward('dashboard');\n    }\n    closeSesion() {\n      localStorage.clear();\n      this.navCtrl.navigateForward('');\n    }\n    success() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this2.toast.create({\n          message: 'The inspector was saved successfully.',\n          duration: 3000,\n          position: 'middle'\n        });\n        toast.present();\n      })();\n    }\n    validarVacio() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this3.toast.create({\n          message: '(' + _this3.campos + ') Fields are required',\n          duration: 3000,\n          position: 'middle'\n        });\n        toast.present();\n      })();\n    }\n    delete() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this4.toast.create({\n          message: 'The inspector has been eliminated.',\n          duration: 2000,\n          position: 'middle'\n        });\n        toast.present();\n      })();\n    }\n    static #_ = this.ɵfac = function InspectorPage_Factory(t) {\n      return new (t || InspectorPage)(i0.ɵɵdirectiveInject(i1.ServiceService), i0.ɵɵdirectiveInject(i2.ToastController), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i2.NavController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InspectorPage,\n      selectors: [[\"app-inspector\"]],\n      decls: 39,\n      vars: 4,\n      consts: [[3, \"translucent\"], [\"src\", \"../../assets/img/logo_circle.png\", \"alt\", \"Logo Inspection squad\", 2, \"width\", \"50px\"], [1, \"user\", 2, \"text-align\", \"right\", 3, \"click\"], [2, \"color\", \"#6E6E6E\"], [\"name\", \"person\"], [3, \"fullscreen\"], [2, \"text-align\", \"left\", \"margin-left\", \"20px\"], [1, \"titulo\"], [\"label\", \"Name\", \"id\", \"name\"], [\"label\", \"Last Name\", \"id\", \"last_name\"], [\"label\", \"E-mail\", \"id\", \"email\"], [\"label\", \"Number Phone\", \"id\", \"phone\"], [\"placeholder\", \"Type address here\", \"id\", \"address\"], [2, \"margin-top\", \"50px\", \"margin-left\", \"20px\", \"padding-right\", \"20px\", \"margin-bottom\", \"20px\"], [\"fill\", \"clear\", \"expand\", \"full\", 2, \"background-color\", \"#1c345c\", \"color\", \"#fff\", 3, \"click\"], [\"name\", \"checkmark-outline\"], [4, \"ngFor\", \"ngForOf\"], [\"fill\", \"default\", \"expand\", \"full\", 2, \"background-color\", \"#fff\", \"color\", \"#000\", 3, \"click\"], [\"name\", \"chevron-back-outline\"], [2, \"text-align\", \"right\"], [\"name\", \"close-circle-outline\", 2, \"color\", \"#b11c44\", \"font-size\", \"18px\", 3, \"click\"]],\n      template: function InspectorPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\");\n          i0.ɵɵelement(2, \"ion-img\", 1);\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function InspectorPage_Template_div_click_3_listener() {\n            return ctx.closeSesion();\n          });\n          i0.ɵɵelementStart(4, \"ion-label\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵelement(6, \"ion-icon\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(7, \"ion-content\", 5);\n          i0.ɵɵelement(8, \"br\");\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"ion-label\", 7);\n          i0.ɵɵtext(11, \"INSPECTOR\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"br\");\n          i0.ɵɵelementStart(13, \"ion-list\")(14, \"ion-item\");\n          i0.ɵɵelement(15, \"ion-input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"br\");\n          i0.ɵɵelementStart(17, \"ion-item\");\n          i0.ɵɵelement(18, \"ion-input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"br\");\n          i0.ɵɵelementStart(20, \"ion-item\");\n          i0.ɵɵelement(21, \"ion-input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"ion-item\");\n          i0.ɵɵelement(23, \"ion-input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"ion-card\")(25, \"ion-card-content\");\n          i0.ɵɵelement(26, \"ion-textarea\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"div\", 13)(28, \"ion-button\", 14);\n          i0.ɵɵlistener(\"click\", function InspectorPage_Template_ion_button_click_28_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵelement(29, \"ion-icon\", 15);\n          i0.ɵɵtext(30, \"Save\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"ion-grid\")(32, \"ion-row\")(33, \"ion-col\");\n          i0.ɵɵtemplate(34, InspectorPage_ion_card_34_Template, 19, 5, \"ion-card\", 16);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(35, \"ion-footer\")(36, \"ion-button\", 17);\n          i0.ɵɵlistener(\"click\", function InspectorPage_Template_ion_button_click_36_listener() {\n            return ctx.back();\n          });\n          i0.ɵɵelement(37, \"ion-icon\", 18);\n          i0.ɵɵtext(38, \"Back\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"\", ctx.user, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngForOf\", ctx.datos);\n        }\n      },\n      dependencies: [i3.NgForOf, i2.IonButton, i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardSubtitle, i2.IonCardTitle, i2.IonCol, i2.IonContent, i2.IonFooter, i2.IonGrid, i2.IonHeader, i2.IonIcon, i2.IonImg, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonRow, i2.IonTextarea, i2.IonToolbar, i2.TextValueAccessor],\n      styles: [\"ion-card-title[_ngcontent-%COMP%]{font-size:20px}\"]\n    });\n  }\n  return InspectorPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}